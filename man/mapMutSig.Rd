% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genetic_code_sav.R
\name{mapMutSig}
\alias{mapMutSig}
\title{Map mutations given a table of codons for each amino acid for a given protein.}
\usage{
mapMutSig(
  prot_id,
  prot_length,
  mutMap,
  ensembldbObj,
  genomeObj,
  flank = 1,
  contexts = get32Contexts(),
  seqLevelStyle = "NCBI"
)
}
\arguments{
\item{prot_id}{character, Ensembl protein ID}

\item{prot_length}{integer, length (in amino acids) of the given protein}

\item{mutMap}{data.frame list of mutations obtained from \code{mapMut}}

\item{ensembldbObj}{Ensembl DB Object from the \code{EnsDb} package (see example)}

\item{genomeObj}{Bioconductor genome object from which coding sequences are extracted (see example)}

\item{flank}{integer, the number of flanking nucleotides with which to define mutational signatures. Only the value of 1 has been catered for at the moment. (Default: 1)}

\item{contexts}{character vector, all possible DNA motifs on which mutational signatures are defined. Obtained from \code{get32Contexts()} (see example)}

\item{seqLevelStyle}{Either "UCSC" or "NCBI". Denote conventions used in genome object to name chromosomes. Need changing to match the genome object. (Default: "NCBI")}
}
\value{
A data.frame with eight columns:
  \code{chr}: chromosome
  \code{g_pos}: genomic position
  \code{AA_pos}: integer, amino acid position of the given Ensembl protein
  \code{WT_AA}: wild-type amino acid (one-letter code)
  \code{MUT_AA}: mutant amino acid (one-letter code)
  \code{WT_codon}: codon corresponding to wild-type amino acid
  \code{MUT_codon}: codon corresponding to mutant amino acid
  \code{MutSig}: the corresponding mutational signature (96-contexts) corresponding to the given AA substitution
}
\description{
Map mutations given a table of codons for each amino acid for a given protein.
}
\examples{
require(EnsDb.Hsapiens.v75)
require(BSgenome.Hsapiens.UCSC.hg19)
id <- "ENSP00000233146"
codons <- mapCodon(id, EnsDb.Hsapiens.v75::EnsDb.Hsapiens.v75,
                   BSgenome.Hsapiens.UCSC.hg19::Hsapiens, seqLevelStyle = "UCSC")
codons_muts <- mapMut(codons, getPossibleMissenseSNVs())
codons_mutsigs <- mapMutSig(id, nrow(codons), codons_muts,
                            EnsDb.Hsapiens.v75::EnsDb.Hsapiens.v75,
                            BSgenome.Hsapiens.UCSC.hg19::Hsapiens, seqLevelStyle = "UCSC")
}
